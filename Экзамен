#Вопрос 2

#include <iostream>
#include <climits>

int main() {
    int arr[] = {3, 7, 2, 5, 8, 1, 6, 9, 4};
    int n = sizeof(arr) / sizeof(arr[0]);

    int max_element = INT_MIN;
    int min_element = INT_MAX;
    int max_index = 0;
    int min_index = 0;

    for (int i = 0; i < n; i++) {
        if (arr[i] > max_element) {
            max_element = arr[i];
            max_index = i;
        }
        if (arr[i] < min_element) {
            min_element = arr[i];
            min_index = i;
        }
    }

    int sum = 0;
    int start, end;
    
    if (max_index < min_index) {
        start = max_index;
        end = min_index;
    } else {
        start = min_index;
        end = max_index;
    }

    for (int i = start; i <= end; i++) {
        sum += arr[i];
    }

    std::cout << "Сумма элементов между максимальным и минимальными элементами: " << sum << std::endl;

    return 0;
}


#Вопрос 3

#include <iostream>
#include <vector>

std::vector<int> mergeSortedArrays(const std::vector<int>& arr1, const std::vector<int>& arr2) {
    std::vector<int> result;
    int i = 0, j = 0;

    while (i < arr1.size() && j < arr2.size()) {
        if (arr1[i] <= arr2[j]) {
            result.push_back(arr1[i]);
            i++;
        } else {
            result.push_back(arr2[j]);
            j++;
        }
    }

    while (i < arr1.size()) {
        result.push_back(arr1[i]);
        i++;
    }

    while (j < arr2.size()) {
        result.push_back(arr2[j]);
        j++;
    }

    return result;
}

int main() {
    std::vector<int> arr1 = {1, 3, 5, 7, 9};
    std::vector<int> arr2 = {2, 4, 6, 8, 10};
    std::vector<int> merged = mergeSortedArrays(arr1, arr2);

    std::cout << "Merged Array: ";
    for (int num : merged) {
        std::cout << num << " ";
    }
    std::cout << std::endl;

    return 0;
}
